const phonebook = { 'Alfred': '(210) 013-1040',
  'Rob': '(424) 012-2013',
  'Jason': '(210) 011-0987',
  'Betty': '(127) 042-3341',
  'Ewa': '(424) 009-3030',
  'Bella': '(210) 011-5010',
  'Jane': '(424) 013-1032',
  'Ray': '(123) 013-7743',
  'Mike': '(127) 011-6751',
  'Jonathan': '(161) 022-7510',
  'Melissa': '(161) 021-6210',
  'John': '(110) 010-2689',
  'Jack': '(127) 018-6512',
  'Michael': '(110) 012-5135',
  'Shane': '(424) 017-4123',
  'Monica': '(141) 011-6123',
  'Rudolf': '(141) 012-6691' }


function closestFriends(h) {
  h=h.map(e=>[e,e.match(/\d{2}\:\d{2}\:\d{2}/)[0]]).map(e=>[e[0].replace(e[1],'').trim(),e[1]])
  let check=Object.entries(phonebook).slice().filter(e=>h.some(u=>u.includes(e[1]))),arr=[]
  h=h.map(e=>check.map(u=>u[1]===e[0]?e=[u[0],e[0],e[1]]:null)).map(e=>e.filter(u=>u)).map(e=>e.map(u=>arr.push(u)))
  arr=arr.map((e,j,ar)=>{
    for(let i=0;i<ar.length;i++){
      if(e[1]===ar[i][1]&&i!==j){e.push(ar[i][2]);ar[i]=['&']}
    }return e
  }).map(e=>e.filter(u=>u!=='&'&&u!==undefined)).filter(e=>e.length)
  return arr.map(e=>{
     if(e.length>3){
       e=[e.slice(0,2),e.slice(2).map(e=>e.split`:`.map(Number))],res=[],counter=e[1].length
      for(let i=0;i<e[1][0].length;i++){
        for(let j=0;j<e[1].length;j++){
          res.push(e[1][j][i])
        }
      }
      e=[e.slice(0,1),res],res2=[]
      for(let i=0;i<e[1].length;i+=counter){
        res2.push(res.slice(i,i+counter))
      }
      e=[e[0],res2.map(e=>e.reduce((a,c)=>a+c,0))]
      if(e[1][2]===60){
        e[1][2]='00'
        e[1][1]+=1
      }
      if(e[1][2]>60){
        let tmp=e[1][2]-60
        e[1][2]%=60
        e[1][1]+=(Math.ceil(tmp/60))
      }
      if(e[1][2]<10&&e[1][2]!=='00'){
        e[1][2]='0'+e[1][2]
      }
      if(e[1][1]===60){
        e[1][1]='00'
        e[1][0]+=1
      }
      if(e[1][1]>60){
        let tmp=e[1][1]-60
        e[1][1]%=60
        e[1][0]+=(Math.ceil(tmp/60))
      }
      if(e[1][1]<10&&e[1][1]!=='00'){
        e[1][1]='0'+e[1][1]
      }
      if(e[1][0]>9){
        e[1][0]=e[1][0]+''
      }
      if(e[1][0]<10&&e[1][0]!=='00'){
        e[1][0]='0'+e[1][0]
      }
      e[1]=e[1].join`:`
      e=[e[0][0][0],e[0][0][1],e[1]]
    }
    return e
  }).sort((a,b)=>+b[2][0]- +a[2][0]||+b[2][1]- +a[2][1]||+b[2][3]- +a[2][3]||+b[2][4]- +a[2][4]||+b[2][6]- +a[2][6]||+b[2][7]- +a[2][7]).slice(0,3).map(e=>e[0])
}
console.log(closestFriends(["(123) 013-7743 00:49:47", "(110) 010-2689 01:17:40",
    "(110) 012-5135 00:16:54", "(161) 022-7510 00:16:24", "(127) 011-6751 01:01:53",
    "(424) 012-2013 01:46:29", "(123) 013-7743 00:59:13", "(127) 042-3341 04:32:45"]))
console.log(closestFriends(["(141) 012-6691 01:12:59", "(110) 012-5135 00:44:20", "(127) 018-6512 01:59:23",
"(127) 018-6512 01:59:58", "(127) 011-6751 00:05:05", "(210) 013-1040 01:07:19",
"(424) 012-2013 01:30:37"]))
console.log(closestFriends([ '(161) 021-6210 00:48:30',
'(424) 012-2013 00:30:20',
'(127) 042-3341 00:07:58',
'(127) 011-6751 00:33:05',
'(110) 010-2689 01:18:33',
'(161) 021-6210 01:50:50',
'(123) 013-7743 01:55:31',
'(161) 022-7510 00:24:09',
'(127) 042-3341 01:51:22',
'(127) 042-3341 01:23:27',
'(110) 010-2689 00:46:11' ]))
console.log(closestFriends([ '(161) 022-7510 01:00:38',
'(127) 018-6512 00:25:49',
'(161) 021-6210 00:51:08',
'(161) 022-7510 00:25:16',
'(127) 042-3341 00:18:10',
'(210) 011-0987 01:30:34',
'(161) 021-6210 00:20:30',
'(161) 022-7510 00:19:11',
'(127) 042-3341 00:34:07',
'(127) 011-6751 00:38:53',
'(110) 010-2689 00:02:25',
'(127) 042-3341 01:24:10',
'(424) 013-1032 01:19:53',
'(123) 013-7743 00:56:46',
'(424) 012-2013 00:30:48',
'(210) 013-1040 01:54:24',
'(141) 011-6123 00:32:58',
'(161) 022-7510 00:30:59',
'(210) 011-5010 01:19:42',
'(210) 011-5010 00:55:36' ]))